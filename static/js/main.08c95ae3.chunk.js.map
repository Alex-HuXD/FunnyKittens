{"version":3,"sources":["components/Card.jsx","components/TellMe.jsx","components/CardContainer.jsx","components/SearchBox.jsx","components/Scroll.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","Math","random","alt","TellMe","style","height","width","padding","CardContainer","cats","toggle","length","map","cat","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","overflowY","border","children","App","onSearchChange","e","setState","target","value","state","fetch","then","res","json","users","filteredCat","this","filter","toLowerCase","includes","background","borderRadius","margin","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAkBeA,MAdf,YAAgC,IAAjBC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MAAMC,EAAK,EAALA,GACtB,OACI,sBAAKC,UAAU,2DAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAGG,KAAKC,SAAlC,0BAAoEC,IAAI,KAChF,gCACI,4BAAIP,IACJ,4BAAIC,IACJ,qDCIDO,EAZA,WACX,OACI,sBAAKL,UAAU,4BAAf,UACI,qBAAKA,UAAU,SACfC,IAAK,sGAAsGG,IAAI,OAC/GE,MAAO,CAACC,OAAO,QAAQC,MAAM,OAAOC,QAAQ,UAE5C,kECcGC,MAnBf,YAAgC,IAARC,EAAO,EAAPA,KAChBC,GAAS,EAMb,OAJIA,EADe,IAAhBD,EAAKE,OAMJ,sBAAKb,UAAU,qBAAf,UACIW,EAAKG,KAAI,SAACC,EAAIC,GACV,OAAO,cAAC,EAAD,CAAcnB,KAAMc,EAAKK,GAAGnB,KAAME,GAAIY,EAAKK,GAAGjB,GAAID,MAAOa,EAAKK,GAAGlB,OAAtDkB,OAEV,IAAXJ,EAAkB,KAAM,cAAC,EAAD,QCAtBK,MAdf,YAAgD,EAA3BC,YAA4B,IAAhBC,EAAe,EAAfA,aAC7B,OACI,qBAAKnB,UAAU,mBAAf,SACI,uBACAA,UAAU,oCACVoB,KAAK,SACLC,YAAY,uBACZC,SAAUH,OCCPI,MARf,SAAgBC,GACZ,OACI,qBAAKlB,MAAO,CAACmB,UAAU,SAASC,OAAO,kBAAkBnB,OAAO,QAAhE,SACGiB,EAAMG,YC2CFC,E,kDAzCb,aAAc,IAAD,8BACX,gBAcFC,eAAe,SAACC,GACd,EAAKC,SAAS,CAAEb,YAAYY,EAAEE,OAAOC,SAdrC,EAAKC,MAAQ,CACXvB,KAAM,GACNO,YAAa,IAJJ,E,gEAQQ,IAAD,OAClBiB,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACpB,KAAK4B,S,+BAQ1B,IAAD,OACAC,EAAcC,KAAKP,MAAMvB,KAAK+B,QAAO,SAAA/B,GACzC,OAAOA,EAAKd,KAAK8C,cAAcC,SAAS,EAAKV,MAAMhB,YAAYyB,kBAGjE,OAASF,KAAKP,MAAMvB,KAAKE,OAEf,sBAAKb,UAAU,SAAf,UACE,+CACA,cAAC,EAAD,CAAWmB,aAAcsB,KAAKZ,iBACxB,mBAAGvB,MAAO,CAACuC,WAAW,QAAQC,aAAa,OAAOrC,QAAQ,OAAOsC,OAAO,QAAxE,4EAGN,cAAC,EAAD,UACE,cAAC,EAAD,CAAepC,KAAM6B,SATD,6C,GAzBpBQ,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAI1BX,M","file":"static/js/main.08c95ae3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nfunction Card({name,email,id}) {\r\n    return (\r\n        <div className='tc bg-light-green white-90 dib br3 pa2 ma3 shadow-5 grow'>\r\n            <img src={`https://robohash.org/${id*Math.random()}?set=set4&size=250x250`} alt='' />\r\n            <div>\r\n                <p>{name}</p>\r\n                <p>{email}</p>\r\n                <button>Click Me</button>\r\n            </div>      \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react'\r\n\r\n\r\nconst TellMe = () => {\r\n    return (\r\n        <div className='tc dib br3 bg-light-green' >\r\n            <img className='dib f3'\r\n            src= \"https://www.pinclipart.com/picdir/big/562-5622317_crystal-ball-emoji-png-emoji-crystal-ball-png.png\" alt=\"ball\" \r\n            style={{height:'300px',width:'auto',padding:'15px'}}   \r\n            />\r\n            <p>lurem ipos sasa sdasas dasas </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TellMe;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport TellMe from './TellMe';\r\n\r\n\r\nfunction CardContainer({cats}) {\r\n    let toggle = false;\r\n    if(cats.length === 1){\r\n        toggle = true;\r\n    }else\r\n        toggle = false;\r\n\r\n    return (\r\n        <div className='card-container pa3'>\r\n           {cats.map((cat,i) =>{\r\n                return <Card key={i} name={cats[i].name} id={cats[i].id} email={cats[i].email} />\r\n            })}\r\n            {toggle === false? null: <TellMe />}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default CardContainer;","import React from 'react'\r\n\r\n\r\nfunction SearchBox({ searchfield,searchChange}) {\r\n    return (\r\n        <div className='searchbox tc pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-light-blue br3' \r\n            type='search' \r\n            placeholder='type in your letters' \r\n            onChange={searchChange}> \r\n            </input>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\n\r\nfunction Scroll(props) {\r\n    return (\r\n        <div style={{overflowY:'scroll',border:'1px solid black',height:'50vh'}}>\r\n          {props.children}  \r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Scroll;","import React,{Component} from \"react\";\nimport CardContainer from \"./components/CardContainer\";\nimport SearchBox from './components/SearchBox.jsx'\nimport Scroll from './components/Scroll.jsx'\n\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      cats: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res=>res.json())\n    .then(users=>this.setState({cats:users}))\n  }\n\n\n  onSearchChange=(e)=> {\n    this.setState({ searchfield:e.target.value })\n  }\n\n  render(){\n    const filteredCat = this.state.cats.filter(cats =>{\n      return cats.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n\n    return (!this.state.cats.length)? <h1>Loading</h1> :\n           (\n              <div className=\"App tc\">\n                <h1>Crazy Kittens</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                      <p style={{background:'white',borderRadius:'25px',padding:'15px',margin:'55px'}}>\n                  type in your letters to filter the kittens,until only one left\n                </p> \n                <Scroll>\n                  <CardContainer cats={filteredCat} />\n                </Scroll>\n          \n              </div>\n            );       \n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from \"./App\";\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}